<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Thickness x:Key="TabItemMargin_Base">0,8,-4,0</Thickness>
    <Thickness x:Key="TabItemMargin_Selected">-4,0,-4,0</Thickness>
    <Thickness x:Key="TabItemMargin_Hover_Final">0,4,0,0</Thickness>
    <Color x:Key="BorderColor_Base">#888</Color>
    <Color x:Key="TabControl_BackgroundColor_Base">#EEF7FF</Color>
    <Color x:Key="TabItem_ForegroundColor_Base">#4971A3</Color>
    
    <SolidColorBrush x:Key="TabItem_TextBrush_Disabled" Color="#888" />
    <SolidColorBrush x:Key="TabItem_TextBrush_Hover" Color="#2D2C8A" />
    <SolidColorBrush x:Key="TabItem_TextBrush_Selected" Color="#0D3288" />
    <SolidColorBrush x:Key="TabItem_BorderBrush_Selected" Color="{StaticResource BorderColor_Base}" />
    <SolidColorBrush x:Key="TabItem_TextBrush_Unselected" Color="{StaticResource TabItem_ForegroundColor_Base}" />

    <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Unselected" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#E8F2FF" Offset="0.0"/>
            <GradientStop Color="#DFE9F6" Offset="0.3"/>
            <GradientStop Color="#C7D8EE" Offset="0.7"/>
            <GradientStop Color="#B9CADE" Offset="0.98"/>
            <!-- See the TabPanel_BackgroundBrush comment. -->
            <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.99"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="TabItem_Border_Unselected" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#AAA" Offset="0"/>
        <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.8"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem_DisabledBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#CCC" Offset="0"/>
        <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.8"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Disabled" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EEE" Offset="0"/>
            <GradientStop Color="#BBB" Offset="0.98"/>
            <!-- This is the same trick as with the TabPanel_BackgroundBrush (see there). -->
            <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.99"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem_HoverBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.98" Color="DarkOrange"/>
            <!-- See the TabPanel_BackgroundBrush comment. -->
            <GradientStop Offset="0.99" Color="{StaticResource BorderColor_Base}"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem_HoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFD5A0" Offset="0.3" />
        <GradientStop Color="#FFFFA335" Offset="0.51" />
        <GradientStop Color="#FFFFC14A" Offset="0.98" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Selected" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFC14A" Offset="0.1" />
            <GradientStop Color="{StaticResource TabControl_BackgroundColor_Base}" Offset="0.15"/>
            <GradientStop Color="#C5DBF6" Offset="0.8"/>
            <GradientStop Color="{StaticResource TabControl_BackgroundColor_Base}" Offset="1.0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- The Style for TabItems (strips). -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <!-- The Grid helps defining the general height of TabItems. -->
                    <Grid Height="35" VerticalAlignment="Bottom">
                        <!-- 
                        The important aspect here is that the bottom of the Border is 0px thick,
                        helping the TabItem/strip to blend into the TabPage.
                     -->
                        <Border Name="Border"
                             Background="{StaticResource TabItem_BackgroundBrush_Unselected}"
                             BorderBrush="{StaticResource TabItem_BorderBrush_Selected}" 
                             Margin="{StaticResource TabItemMargin_Base}"
                             BorderThickness="2,1,1,0" 
                             CornerRadius="3,3,0,0" 
                             >
                            <!--******** 
                           This grid, along with its content (except for the TI-ContentPresenter)
                           have been added in part IV.
                        ************-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <!-- Text / TabItem's Caption -->
                                    <ColumnDefinition/>
                                    <!-- Close button -->
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <!-- This is where the Content of the TabItem will be rendered. -->
                                <ContentPresenter x:Name="ContentSite"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             ContentSource="Header"
                                             Margin="7,2,12,2"
                                             RecognizesAccessKey="True"/>
                                <!-- 
                              This represents the Close-button.
                           
                              The Command-binding that we create here refers to the Window's 
                              DataContext (which, for the sample, is the window's code-behind);
                              In order for the Command to be able to determine which TabItem the
                              button belongs to, a relative binding will do the trick (i.e., 
                              (bubble up to the parent TabItem).
                           -->
                                <Button x:Name="cmdTabItemCloseButton"
                                   Style="{StaticResource CloseButtonStyle}"
                                   Command="{Binding Path=Content.DataContext.CloseCommand}"
                                   CommandParameter="{Binding  
                                       RelativeSource={RelativeSource FindAncestor, 
                                       AncestorType={x:Type TabItem}}}"
                                   Grid.Column="1"
                                   Margin="-7,5,7,5"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- The appearance of a TabItem when it's inactive/unselected -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="False"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <!-- 
                           The Triggers required to animate the TabItem when it enters/leaves 
                           the "Unselected" state (added in part two) 
                        -->
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="sbUnselected"
                                            Storyboard="{StaticResource TabItemStoryBoard_Unselected}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="sbUnselected"/>
                            </MultiTrigger.ExitActions>
                            <Setter Property="Panel.ZIndex" Value="90" />
                            <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource TabItem_BackgroundBrush_Unselected}" />
                            <Setter TargetName="Border" Property="BorderBrush" 
                                Value="{StaticResource TabItem_Border_Unselected}" />
                            <Setter Property="Foreground" 
                                Value="{StaticResource TabItem_TextBrush_Unselected}" />
                            <!-- Except for the selected TabItem, tabs are to appear smaller in height. -->
                            <Setter TargetName="Border" Property="Margin" 
                                Value="{StaticResource TabItemMargin_Base}"/>
                        </MultiTrigger>

                        <!-- 
                        The appearance of a TabItem when it's disabled 
                        (in addition to Selected=False)
                     -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Panel.ZIndex" Value="80" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource TabItem_DisabledBorderBrush}" />
                            <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource TabItem_BackgroundBrush_Disabled}" />
                            <Setter Property="Foreground" 
                                Value="{StaticResource TabItem_TextBrush_Disabled}" />
                            <Setter TargetName="Border" Property="Margin" 
                                Value="{StaticResource TabItemMargin_Base}"/>
                        </Trigger>

                        <!-- The appearance of a TabItem when the mouse hovers over it -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <!-- 
                           The Triggers required to animate the TabItem when it enters/leaves the "Hover"
                           state (added in part two) 
                        -->
                            <MultiTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="sbUnselected_Hover_Exit"/>
                                <BeginStoryboard x:Name="sbHover"
                                            Storyboard="{StaticResource TabItemStoryBoard_Hover}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="sbUnselected_Hover_Exit" 
                                            Storyboard="{StaticResource TabItemStoryBoard_Unselected}"/>
                            </MultiTrigger.ExitActions>
                            <Setter Property="Panel.ZIndex" Value="99" />
                            <Setter Property="Foreground" Value="{StaticResource TabItem_TextBrush_Hover}" />
                            <Setter Property="BorderBrush" 
                                TargetName="Border" 
                                Value="{StaticResource TabItem_HoverBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="2,1,1,1" />
                            <Setter Property="Background" TargetName="Border"
                                Value="{StaticResource TabItem_HoverBackgroundBrush}"/>
                            <!-- 
                           To further increase the hover-effect, extend the TabItem's height a little
                           more compared to unselected TabItems.
                        -->
                            <Setter TargetName="Border" Property="Margin" 
                                Value="{StaticResource TabItemMargin_Hover_Final}"/>
                        </MultiTrigger>

                        <!-- The appearance of a TabItem when it's active/selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <!-- 
                           The Triggers required to animate the TabItem when it 
                           enters/leaves the "Selected" state (added in part two) 
                        -->
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="sbUnselected_Selected_Exit"/>
                                <BeginStoryboard 
                              x:Name="sbSelected"
                              Storyboard="{StaticResource TabItemStoryBoard_Selected}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard 
                              x:Name="sbUnselected_Selected_Exit" 
                              Storyboard="{StaticResource TabItemStoryBoard_Unselected}"/>
                            </Trigger.ExitActions>
                            <!-- We want the selected TabItem to always be on top. -->
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="BorderBrush" 
                                Value="{StaticResource TabItem_BorderBrush_Selected}" />
                            <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource TabItem_BackgroundBrush_Selected}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Foreground" 
                                Value="{StaticResource TabItem_TextBrush_Selected}"/>
                            <Setter TargetName="Border" Property="Margin" 
                                Value="{StaticResource TabItemMargin_Selected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>